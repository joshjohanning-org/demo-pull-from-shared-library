name: demo

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

env:
  image_name: my-image-name

jobs:
  composite-action-test:
    runs-on: ubuntu-latest
    steps:
    - name: composite action
      uses: joshjohanning-org/demo-shared-library-from-app@main
    
    - name: ls everything
      run: |
        ls -R
      
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        # Artifact name
        name: build-artifact
        path: test.sh
      
  build:
    runs-on: ubuntu-latest

    steps:
      
      - name: getting this repo
        uses: actions/checkout@v3

      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ vars.DEMO_APP_LIBRARY_APP_ID }}
          installation_id: ${{ vars.DEMO_APP_LIBRARY_INSTALLATION_ID }}
          private_key: ${{ secrets.DEMO_APP_LIBRARY_PRIVATE_KEY }}
      
      - name: get the other repo
        run: git clone https://user:${{ steps.generate_token.outputs.token }}@github.com/joshjohanning-org/demo-shared-library-from-app.git
    
      - name: ls everything
        run: ls -R
        
      - name: how are we doing with the api
        run: | 
          curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ steps.generate_token.outputs.token }}"\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/rate_limit

      - name: create new issue
        env: 
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: | 
          gh issue create --title "I found a bug" --body "Nothing works" -R joshjohanning-org/demo-shared-library-from-app
          
  deploy-dev:
    runs-on: ubuntu-latest
    needs: [ composite-action-test ]
    environment: dev
    steps:
    - run: ls
    - name: Download a Build Artifact
      uses: actions/download-artifact@v3
      with:
        name: build-artifact
    
    - run: ls
    
  deploy-prod:
    runs-on: ubuntu-latest
    needs: [ composite-action-test, deploy-dev ]
    environment: prod
    steps:
    - run: ls
    - name: Download a Build Artifact
      uses: actions/download-artifact@v3
      with:
        name: build-artifact
    
    - run: ls
    
    
    
